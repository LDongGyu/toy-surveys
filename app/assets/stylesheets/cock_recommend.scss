// Place all the styles related to the cock_recommend controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/
input {
  font-size: 4em;
  font-family: "UhBeemysen";
  color: #fff;
}
.intro .intro-wrap {
    transition: all 0.3s ease 0s;
    width: 280px;
    margin: 0 auto;
    position: relative;
    top: 0px;
    text-align: center;
    color: #fff;
    color: rgba(255,255,255,1);
    cursor: pointer;
    border-radius: 5em;
    line-height: 28px;
    font-weight: 200;
    padding: 20px 0;
    background: #ffa3a3;
    background: linear-gradient(150deg,#ffa3a3 26%,#ffca09);
    /* background: linear-gradient(150deg,rgba(0, 6, 59, 0.5) 26%,rgba(49, 81, 255, 0.5)); */
    /* background: rgba(255,255,255,0.05); */
    box-shadow: 0px 0px 10px rgba(255, 50, 49, 0.5);
    form{
      font-size: 4em;
      text-align: center;
      input[type="submit"] {
        color:#fff;
        font-family: "UhBeemysen";
        font-size: 1em;
      }
    }
  }


.exp {
  display: table; // to center the item
  margin: 5%;
  justify-content: center;
  .checkbox {
    vertical-align: middle; // to center the item
    text-align: center; // to center the item
    form {
      display: grid;
      color: #fff;
      a{
        color: #fff;
      }
    }
  }
  
}

label {
    display: inline-block; // to make it easier to click
    color: black;
    cursor: pointer;
    position: relative; // important
  
    // Now we'll create the checkbox object
  
    span {
      display: inline-block;
      position: relative;
      background-color: transparent;
      // width: 25px;
      height: 25px;
      transform-origin: center;
      // border: 2px solid black;
      border-radius: 50%;
      vertical-align: -6px;
      margin: 0.5em;
      transition: background-color 150ms 200ms, transform 350ms cubic-bezier(.78,-1.22,.17,1.89); // custom ease effect for bouncy animation
      font-size: 2em;
      color: #ffffff;
  // Now we'll create the "tick" using pseudo elements - those will be basically two lines that will be rotated to form the "tick"
  
    &:before {
      content: "";
      width: 0px;
      height: 2px;
      border-radius: 2px; // so that the tick has nice rounded look
      background: #fff;
      position: absolute;
      transform: rotate(45deg);
      top: 13px; // you'll need to experiment with placement depending on the dimensions you've chosen
      left: 9px; // you'll need to experiment with placement depending on the dimensions you've chosen
      transition: width 50ms ease 50ms;
      transform-origin: 0% 0%;
    }
  
    &:after {
      content: "";
      width: 0;
      height: 2px;
      border-radius: 2px; // so that the tick has nice rounded look
      background: transparent;
      position: absolute;
      transform: rotate(305deg);
      top: 23.5px;
      left: 18px;

      //top: 16px; // you'll need to experiment with placement depending on the dimensions you've chosen
      //left: 10px; // you'll need to experiment with placement depending on the dimensions you've chosen
      transition: width 50ms ease;
      transform-origin: 0% 0%;
    }
  }
  // Time to add some life to it
  
  &:hover {
    span {
      &:before {
        width: 5px;
        transition: width 100ms ease;
      }
      
      &:after {
        width: 10px;
        transition: width 150ms ease 100ms;
      }
    }
  }
}

input[type="checkbox"] {
    display: none; // hide the system checkbox

  // Let's add some effects after the checkbox is checked
  
  &:checked {
    + label {
      span {
        background-color: #000;
        transform: scale(1.25); // enlarge the box
        
        &:after {
          width: 0.5em;
          background: #ffcd60;
          transition: width 150ms ease 100ms; // enlarge the tick
        }
        
        &:before {
          width: 0.5em;
          background: #ffcd60;
          transition: width 150ms ease 100ms; // enlarge the tick
        }
      }
      
      &:hover { // copy the states for onMouseOver to avoid flickering
        span {
          background-color: #000;
          transform: scale(1.25); // enlarge the box

          &:after {
            width: 0.5em;
            background: #ffcd60;
            transition: width 150ms ease 100ms; // enlarge the tick
          }

          &:before {
            width: 0.5em;
            background: #ffcd60;
            transition: width 150ms ease 100ms; // enlarge the tick
          }
        }  
      }
    }
  }
}


input[type="radio"] {
    display: none; // hide the system checkbox

  // Let's add some effects after the checkbox is checked
  
  &:checked {
    + label {
      span {
        background-color: #000;
        transform: scale(1.25); // enlarge the box
        
        &:after {
          width: 0.5em;
          background: #ffcd60;
          transition: width 150ms ease 100ms; // enlarge the tick
        }
        
        &:before {
          width: 0.5em;
          background: #ffcd60;
          transition: width 150ms ease 100ms; // enlarge the tick
        }
      }
      
      &:hover { // copy the states for onMouseOver to avoid flickering
        span {
          background-color: #000;
          transform: scale(1.25); // enlarge the box

          &:after {
            width: 0.5em;
            background: #ffcd60;
            transition: width 150ms ease 100ms; // enlarge the tick
          }

          &:before {
            width: 0.5em;
            background: #ffcd60;
            transition: width 150ms ease 100ms; // enlarge the tick
          }
        }  
      }
    }
  }
}

